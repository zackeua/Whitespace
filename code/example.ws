Put.1.on.the.stac.[Space] [Space] [Space] [Tab]	[LF]
Set.a.Label.at.this.point.[LF]
[Space] [Space] [Space] [Tab]	[Space] [Space] [Space] [Space] [Tab]	[Tab]	[LF]
Duplicate.the.top.stack.item[Space] [LF]
[Space] Output.the.current.calue[Tab]	[LF]
[Space] [Tab]	Put.10.(newline).on.the.stack[Space] [Space] [Space] [Tab]	[Space] [Tab]	[Space] [LF]
and.output.the.newline[Tab]	[LF]
[Space] [Space] Put.a.1.on.the.stack[Space] [Space] [Space] [Tab]	[LF]
Addition.This.increments.our.current.value[Tab]	[Space] [Space] [Space] Duplicate.that.value.so.we.can.test.it[Space] [LF]
[Space] Push.11.onto.the.stack[Space] [Space] [Space] [Tab]	[Space] [Tab]	[Tab]	[LF]
Subtraction.So.if.we've.reached.the.end,we.have.a.zero.on.the.stack[Tab]	[Space] [Space] [Tab]	If.we.have.a.zero,jump.to.the.end[LF]
[Tab]	[Space] [Space] [Tab]	[Space] [Space] [Space] [Tab]	[Space] [Tab]	[LF]
Jump.to.the.start[LF]
[Space] [LF]
[Space] [Tab]	[Space] [Space] [Space] [Space] [Tab]	[Tab]	[LF]
Set.the.end.label[LF]
[Space] [Space] [Space] [Tab]	[Space] [Space] [Space] [Tab]	[Space] [Tab]	[LF]
Discard.our.accumulator.to.be.tidy[Space] [LF]
[LF]
Finish[LF]
[LF]
[LF]
